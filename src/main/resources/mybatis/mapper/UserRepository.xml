<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.wghtstudio.insurance.dao.repository.UserRepository">
    <resultMap id="userMap" type="User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="roleID" column="role_id"/>
        <association property="role" column="role_id"
                     select="cn.wghtstudio.insurance.dao.repository.RoleRepository.getRoleByID"
                     javaType="Role"/>
    </resultMap>

    <select id="getUserByUsername" resultMap="userMap">
        SELECT id, username, password, role_id
        FROM users
        WHERE username = #{username}
    </select>

    <select id="getUserByID" resultMap="userMap">
        SELECT id, username, password, role_id
        FROM users
        WHERE id = #{id}
    </select>

    <select id="queryUser" resultMap="userMap">
        SELECT id, username, password, role_id
        FROM users
        <where>
            <if test="username != null and username!= ''">
                and username LIKE #{username}
            </if>

            <if test="currentUserId != null and currentUserId != 0">
                and id != #{currentUserId}
            </if>
        </where>
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="getUserCount" resultType="Integer">
        SELECT count(*)
        FROM users
        <where>
            <if test="username != null and username!= ''">
                and username LIKE #{username}
            </if>

            <if test="currentUserId != null and currentUserId != 0">
                and id != #{currentUserId}
            </if>
        </where>
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="id">
        insert into users (username, password, role_id)
        VALUES (#{username}, #{password}, #{roleId})
    </insert>

    <update id="updateUserById">
        update users
        set username=#{username},
            password=#{password},
            role_id=#{roleId}
        where id = #{id}
    </update>

    <update id="updateUserPassword">
        update users
        set password=#{newpassword}
        where id = #{id}
    </update>

    <delete id="deleteUserById">
        delete
        from users
        where id = #{id}
    </delete>
</mapper>
